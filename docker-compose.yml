services:
  app:
    build: .
    ports:
      - ${PORT}:${PORT}
    environment:
      - PORT=${PORT}
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - NODE_ENV=${NODE_ENV}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - STORAGE_DOMAIN=${STORAGE_DOMAIN}
      - STORAGE_ROOT_USER=${STORAGE_ROOT_USER}
      - STORAGE_ROOT_PASSWORD=${STORAGE_ROOT_PASSWORD}
    depends_on:
      - db
      - redis
      - minio

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:${DB_PORT}

  redis:
    image: redis:latest
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  minio:
   image: minio/minio:latest
   command: server --console-address ":9001" /data/
   ports:
     - 9000:9000
     - 9001:9001
   environment:
     MINIO_DOMAIN: ${STORAGE_DOMAIN}
     MINIO_ROOT_USER: ${STORAGE_ROOT_USER}
     MINIO_ROOT_PASSWORD: ${STORAGE_ROOT_PASSWORD}
   restart: always
   volumes:
     - ./storage:/data
   healthcheck:
     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
     interval: 30s
     timeout: 20s
     retries: 3

volumes:
  db_data:
